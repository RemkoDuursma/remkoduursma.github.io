<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Journalclub on Remko Duursma</title>
    <link>http://www.remkoduursma.com/post</link>
    <description>Recent content on Remko Duursma</description>
    <generator>Hugo, blogdown, rmarkdown</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 01 Jun 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://remkoduursma.github.io/tags/journalclub/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Cherriest Pick</title>
      <link>https://remkoduursma.github.io/post/2017-06-01-cherriestpick/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://remkoduursma.github.io/post/2017-06-01-cherriestpick/</guid>
      <description>&lt;p&gt;We discussed a paper in journal club today (&lt;a href=&#34;http://iopscience.iop.org/article/10.1088/1748-9326/aa6f97/meta&#34;&gt;Tan et al. 2017&lt;/a&gt;), where three outliers were removed from a plot with just seven data points. The authors were happy to report a correlation coefficient (&lt;em&gt;r&lt;/em&gt;) of 0.99. Here is their Fig. 2b (doesn’t matter what’s on the axes), where ‘outliers’ were labelled with open symbols.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/tan2017fig2.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;What value of &lt;em&gt;r&lt;/em&gt; do we expect between two normally distributed variables (where n=7), when we remove three points so that &lt;em&gt;r&lt;/em&gt; is maximal?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Take 7 normally distributed points, try all combinations where we choose 4
# points, and select the one with the highest correlation.
cherrypick &amp;lt;- function(plotit=FALSE){
  x &amp;lt;- rnorm(7, mean = 28, sd = 1)
  y &amp;lt;- rnorm(7, mean = 26, sd = 1)
  
  m &amp;lt;- combn(7, 4)
  cr &amp;lt;- apply(m, 2, function(i)cor(x[i],y[i]))
  
  if(plotit){ 
    ii &amp;lt;- m[,which.max(abs(cr))]
    
    plot(x,y)
    points(x[ii], y[ii], pch=19)
    abline(lm(y[ii] ~ x[ii]), lty=5)
  } else {
    return(max(abs(cr)))
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A few examples with the above function, where the regression line uses the four solid points (and the remaining 3 are ‘outliers’).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1234)
par(mfrow=c(3,3), mar=c(2.2,2.2,0.2,0.2), 
    cex.axis=0.8,
    cex.lab=0.8, mgp=c(1.2,0.4,0), tcl=0.2)
for(i in 1:9)cherrypick(plotit=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://remkoduursma.github.io/post/2017-06-01-cherriestpick_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we simulate ten thousand times and get the distribution of the cherry-picked &lt;em&gt;r&lt;/em&gt; (absolute values).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;picks &amp;lt;- replicate(10^4, cherrypick())

hist(picks, breaks=100, col=&amp;quot;darkgrey&amp;quot;, border=&amp;quot;darkgrey&amp;quot;,
     xlab=&amp;quot;Correlation coefficient n=4&amp;quot;, main=&amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://remkoduursma.github.io/post/2017-06-01-cherriestpick_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Clearly high values of &lt;em&gt;r&lt;/em&gt; are very likely. In this simulation, 87% of simulated &lt;em&gt;r&lt;/em&gt; values were above 0.9, and 66.5% above 0.95.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
